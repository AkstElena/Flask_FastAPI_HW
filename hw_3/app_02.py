"""
–ó–∞–¥–∞–Ω–∏–µ ‚Ññ2
üìå –°–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–Ω–∏–≥–∞—Ö –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ.
üìå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–≤–µ —Ç–∞–±–ª–∏—Ü—ã: "–ö–Ω–∏–≥–∏" –∏ "–ê–≤—Ç–æ—Ä—ã".
üìå –í —Ç–∞–±–ª–∏—Ü–µ "–ö–Ω–∏–≥–∏" –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è: id, –Ω–∞–∑–≤–∞–Ω–∏–µ, –≥–æ–¥ –∏–∑–¥–∞–Ω–∏—è,
–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –∏ id –∞–≤—Ç–æ—Ä–∞.
üìå –í —Ç–∞–±–ª–∏—Ü–µ "–ê–≤—Ç–æ—Ä—ã" –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø–æ–ª—è: id, –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è.
üìå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å —Å–≤—è–∑—å –º–µ–∂–¥—É —Ç–∞–±–ª–∏—Ü–∞–º–∏ "–ö–Ω–∏–≥–∏" –∏ "–ê–≤—Ç–æ—Ä—ã".
üìå –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–Ω–∏–≥ —Å
—É–∫–∞–∑–∞–Ω–∏–µ–º –∏—Ö –∞–≤—Ç–æ—Ä–æ–≤.
"""
from random import randint

from flask import Flask, render_template
from .models_lib import db, Book, Author

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///hw_database.db'
db.init_app(app)


@app.route('/')
def index():
    return 'Hi!'


@app.cli.command('init-db')
def init_db():
    db.create_all()


@app.cli.command("fill-db")
def fill_db():
    authors_dict = {'–¢–µ—Ä—Ä–∏ –ü—Ä–∞—Ç—á–µ—Ç—Ç': ['–°—Ç—Ä–∞–∂–∞! –°—Ç—Ä–∞–∂–∞!', '–ú—Ä–∞—á–Ω—ã–π –∂—Ä–µ—Ü', '–†–æ–∫–æ–≤–∞—è –º—É–∑—ã–∫–∞', '–¶–≤–µ—Ç –≤–æ–ª—à–µ–±—Å—Ç–≤–∞'],
                    '–£–º–±–µ—Ä—Ç–æ –≠–∫–æ': ['–ò–º—è —Ä–æ–∑—ã', '–ú–∞—è—Ç–Ω–∏–∫ –§—É–∫–æ'],
                    '–†–æ–±–∏–Ω –•–æ–±–±': ['–ö–æ—Ä–æ–ª–µ–≤—Å–∫–∏–π —É–±–∏–π—Ü–∞', '–í–æ–ª—à–µ–±–Ω—ã–π –∫–æ—Ä–∞–±–ª—å', '–ì–æ—Ä–æ–¥ –¥—Ä–∞–∫–æ–Ω–æ–≤'],
                    '–ù–∏–ª –ì–µ–π–º–∞–Ω': ['–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–µ –±–æ–≥–∏', '–ó–≤–µ–∑–¥–Ω–∞—è –ø—ã–ª—å'],
                    '–§—Ä–µ–¥–µ—Ä–∏–∫ –ë–∞–∫–º–∞–Ω': ['–í—Ç–æ—Ä–∞—è –∂–∏–∑–Ω—å –£–≤–µ', '–ó–¥–µ—Å—å –±—ã–ª–∞ –ë—Ä–∏—Ç—Ç-–ú–∞—Ä–∏', '–¢—Ä–µ–≤–æ–∂–Ω—ã–µ –ª—é–¥–∏']}
    for el in authors_dict:
        new_author = Author(firstname=el.split()[0], lastname=el.split()[1])
        db.session.add(new_author)
    db.session.commit()
    for k, v in authors_dict.items():
        author = Author.query.filter_by(firstname=k.split()[0], lastname=k.split()[1]).first()
        for el in v:
            new_book = Book(name=el, year_publishing=1950 + randint(0, 60), count=randint(10, 101), id_author=author.id)
            db.session.add(new_book)
    db.session.commit()


@app.route('/books/')
def get_books():
    books = Book.query.all()
    context = {'books': books}
    return render_template('books.html', **context)


if __name__ == '__main__':
    app.run(debug=True)
